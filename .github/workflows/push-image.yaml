name: push image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  push-image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: setup aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}

      - name: docker login
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.IMAGE_URI }}

      - name: create image tag
        run: |
          TAG=$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "new image tag: \`$TAG\`" >> $GITHUB_STEP_SUMMARY
        env:
          TZ: Asia/Tokyo

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: cache
        id: cache
        uses: actions/cache@v4
        with:
          path: go-build-cache-dir
          key: go-build-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-${{ runner.os }}
      
      - name: inject cache
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "go-build-cache-dir": "/root/.cache/go-build"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.IMAGE_URI }}/${{ secrets.IMAGE_REPO_NAME }}:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        
      # - name: restart server
      #   run: |
      #     aws ecs update-service --cluster ${{ secrets.CLUSTER_NAME }} --service ${{ secrets.SERVICE_NAME }} --force-new-deployment
        