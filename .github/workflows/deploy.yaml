name: deploy

on:
  push:
    branches:
      - main
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - 'task-definition.json'

permissions:
  contents: read
  id-token: write

jobs:
  push-image:
    runs-on: ubuntu-latest
    outputs:
      # job 間で情報を共有する方法の1つ
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/passing-information-between-jobs
      tag: ${{ steps.create-image-tag.outputs.tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: setup aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}

      - name: docker login
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.IMAGE_URI }}

      - name: create image tag
        id: create-image-tag
        run: |
          TAG=$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "new image tag: \`$TAG\`" >> $GITHUB_STEP_SUMMARY
        env:
          TZ: Asia/Tokyo

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: cache
        id: cache
        uses: actions/cache@v4
        with:
          path: go-build-cache-dir
          key: go-build-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-build-${{ runner.os }}
      
      - name: inject cache
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "go-build-cache-dir": "/root/.cache/go-build"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.IMAGE_URI }}/${{ secrets.IMAGE_REPO_NAME }}:${{ steps.create-image-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: push-image # needs は成功を求める https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/using-jobs-in-a-workflow#defining-prerequisite-jobs
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}

      - name: create task definition
        env:
          tag: ${{ needs.push-image.outputs.tag }}
        run: |
          sed -i 's/__ACCOUNT_ID__/${{ secrets.AWS_ACCOUNT_ID }}/g' task-definition.json
          sed -i 's/__IMAGE_TAG__/${{ env.tag }}/g' task-definition.json

      - name: deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: task-definition.json
          cluster: tcr
          service: tcr
